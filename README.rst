setuptools_scm
~~~~~~~~~~~~~~

This module is a simple setup_requires utility for use
in mercurial and git based projects.

It extracts the last Tag as well as the distance to it in commits
from the scm, and uses these to calculate a version number.

And it provides a file finder for both scm, so MANIFEST.in is no longer needed.

By default, it will increment the last component of the version by one
and append .dev{distance}
in case the last component is .dev, the version will be unchanges

This requires always using all components in tags (i.e. 2.0.0 instead of 2.0)
to avoid counting up at the wrong level
and inadvertedly releasing a higher version
(i.e. 2.1.devX instead of 2.0.1.devX)


It uses various strategies to archive its task:

1. try to directly ask hg/git for the tag/distance
2. try to infer it from the `.hg_archival.txt` file
3. try to read the exact version the cache file if it exists
4. try to read the exact version from the 'PKG-INFO' file
   as generated by `setup.py sdists` (this is a nasty abuse)


The setup.py usage is::

    from setuptools import setup
    setup(
        ...,
        use_scm_version=True,
        setup_requires=['setuptools_scm'],
        ...,
    )

If you want to configure the way use_scm_version works
you an provide a mapping with options instead of simple truth value.


currently supported configuration keys are:

:guess_next:
    guess the next versions, the default is True

    if it is set to false, setuptoos_scm will fall back
    to using the .post{distance}
:cache_file:
    a filename to use for the cache_file which will
    be a python module with only the version as attribute


To use setuptools_scm in other python code
one can use the get_version function::

    from setuptools_scm import get_version
    my_version = get_version(cache)

It suports the keys of the setup.py use_scm_version
flag as keyword arguments.
